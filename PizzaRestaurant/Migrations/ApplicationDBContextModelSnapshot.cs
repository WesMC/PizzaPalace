// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PizzaRestaurant.Models;

namespace PizzaRestaurant.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PizzaRestaurant.Models.FoodOption", b =>
                {
                    b.Property<Guid>("FoodOptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Charge")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(400)")
                        .HasMaxLength(400);

                    b.Property<Guid>("FoodOptionSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("FoodOptionId");

                    b.HasIndex("FoodOptionSetId");

                    b.ToTable("FoodOptions");
                });

            modelBuilder.Entity("PizzaRestaurant.Models.FoodOptionSet", b =>
                {
                    b.Property<Guid>("FoodOptionSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Al_Eggs")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_Fish")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_Gluten")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_Milk")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_Peanuts")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_Shellfish")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_Soy")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_TreeNuts")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_Wheat")
                        .HasColumnType("bit");

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("CaloriesFat")
                        .HasColumnType("int");

                    b.Property<double>("Charge")
                        .HasColumnType("float");

                    b.Property<int>("Choles")
                        .HasColumnType("int");

                    b.Property<int>("Fiber")
                        .HasColumnType("int");

                    b.Property<string>("Ingredients")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<Guid>("MenuItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Protein")
                        .HasColumnType("int");

                    b.Property<int>("SatFat")
                        .HasColumnType("int");

                    b.Property<int>("Sodium")
                        .HasColumnType("int");

                    b.Property<int>("Sugar")
                        .HasColumnType("int");

                    b.Property<int>("TCarbs")
                        .HasColumnType("int");

                    b.Property<int>("TFat")
                        .HasColumnType("int");

                    b.Property<int>("TransFat")
                        .HasColumnType("int");

                    b.HasKey("FoodOptionSetId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("FoodOptionSets");
                });

            modelBuilder.Entity("PizzaRestaurant.Models.MenuCategory", b =>
                {
                    b.Property<int>("MenuCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuCategoryId");

                    b.ToTable("MenuCategories");
                });

            modelBuilder.Entity("PizzaRestaurant.Models.MenuItem", b =>
                {
                    b.Property<Guid>("MenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Al_Eggs")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_Fish")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_Gluten")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_Milk")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_Peanuts")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_Shellfish")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_Soy")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_TreeNuts")
                        .HasColumnType("bit");

                    b.Property<bool>("Al_Wheat")
                        .HasColumnType("bit");

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("CaloriesFat")
                        .HasColumnType("int");

                    b.Property<double>("Charge")
                        .HasColumnType("float");

                    b.Property<int>("Choles")
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<int>("Fiber")
                        .HasColumnType("int");

                    b.Property<string>("Ingredients")
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<int>("MenuCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Pref")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Protein")
                        .HasColumnType("int");

                    b.Property<int>("SatFat")
                        .HasColumnType("int");

                    b.Property<int>("Sodium")
                        .HasColumnType("int");

                    b.Property<int>("Sugar")
                        .HasColumnType("int");

                    b.Property<int>("TCarbs")
                        .HasColumnType("int");

                    b.Property<int>("TFat")
                        .HasColumnType("int");

                    b.Property<int>("TransFat")
                        .HasColumnType("int");

                    b.HasKey("MenuItemId");

                    b.HasIndex("MenuCategoryId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("PizzaRestaurant.Models.FoodOption", b =>
                {
                    b.HasOne("PizzaRestaurant.Models.FoodOptionSet", null)
                        .WithMany("FoodOption")
                        .HasForeignKey("FoodOptionSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaRestaurant.Models.FoodOptionSet", b =>
                {
                    b.HasOne("PizzaRestaurant.Models.MenuItem", null)
                        .WithMany("FoodOptionSets")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaRestaurant.Models.MenuItem", b =>
                {
                    b.HasOne("PizzaRestaurant.Models.MenuCategory", null)
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
